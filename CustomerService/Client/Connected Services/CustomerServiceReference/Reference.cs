//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.CustomerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/CustomerService")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerServiceReference.ICustomerService")]
    public interface ICustomerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/AddCustomer", ReplyAction="http://tempuri.org/ICustomerService/AddCustomerResponse")]
        bool AddCustomer(Client.CustomerServiceReference.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/AddCustomer", ReplyAction="http://tempuri.org/ICustomerService/AddCustomerResponse")]
        System.Threading.Tasks.Task<bool> AddCustomerAsync(Client.CustomerServiceReference.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/RetrieveCustomer", ReplyAction="http://tempuri.org/ICustomerService/RetrieveCustomerResponse")]
        Client.CustomerServiceReference.Customer RetrieveCustomer(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/RetrieveCustomer", ReplyAction="http://tempuri.org/ICustomerService/RetrieveCustomerResponse")]
        System.Threading.Tasks.Task<Client.CustomerServiceReference.Customer> RetrieveCustomerAsync(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomerWithThisId", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerWithThisIdResponse")]
        void DeleteCustomerWithThisId(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/DeleteCustomerWithThisId", ReplyAction="http://tempuri.org/ICustomerService/DeleteCustomerWithThisIdResponse")]
        System.Threading.Tasks.Task DeleteCustomerWithThisIdAsync(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/RetrieveAllCustomers", ReplyAction="http://tempuri.org/ICustomerService/RetrieveAllCustomersResponse")]
        Client.CustomerServiceReference.Customer[] RetrieveAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerService/RetrieveAllCustomers", ReplyAction="http://tempuri.org/ICustomerService/RetrieveAllCustomersResponse")]
        System.Threading.Tasks.Task<Client.CustomerServiceReference.Customer[]> RetrieveAllCustomersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServiceChannel : Client.CustomerServiceReference.ICustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<Client.CustomerServiceReference.ICustomerService>, Client.CustomerServiceReference.ICustomerService {
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddCustomer(Client.CustomerServiceReference.Customer customer) {
            return base.Channel.AddCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<bool> AddCustomerAsync(Client.CustomerServiceReference.Customer customer) {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public Client.CustomerServiceReference.Customer RetrieveCustomer(int customerId) {
            return base.Channel.RetrieveCustomer(customerId);
        }
        
        public System.Threading.Tasks.Task<Client.CustomerServiceReference.Customer> RetrieveCustomerAsync(int customerId) {
            return base.Channel.RetrieveCustomerAsync(customerId);
        }
        
        public void DeleteCustomerWithThisId(int customerId) {
            base.Channel.DeleteCustomerWithThisId(customerId);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerWithThisIdAsync(int customerId) {
            return base.Channel.DeleteCustomerWithThisIdAsync(customerId);
        }
        
        public Client.CustomerServiceReference.Customer[] RetrieveAllCustomers() {
            return base.Channel.RetrieveAllCustomers();
        }
        
        public System.Threading.Tasks.Task<Client.CustomerServiceReference.Customer[]> RetrieveAllCustomersAsync() {
            return base.Channel.RetrieveAllCustomersAsync();
        }
    }
}
